其实思路很简单，反转后竖式依此下拉至最长位，如果carry>1，再延长1，反转回来


#include<iostream>
#include<vector>
#include<string>
using namespace std;
string bigadd(vector<char>a, vector<char>b) {
	reverse(a.begin(), a.end());
	reverse(b.begin(), b.end());
	string result ;
	if (a.size() < b.size()) swap(a, b);
	int carry = 0;
	for (int i = 0; i < a.size(); i++) {
		int digit1 = a[i] - '0';
		int digit2 = i < b.size() ? b[i] - '0' : 0;
		int sum = digit1 + digit2+carry;
		carry = sum / 10;
		result += to_string(sum % 10);
	}
	if (carry) result += to_string(1);
	reverse(result.begin(), result.end());
	return result;
	
}
int main() {
	vector<char>a = { '1','2','3','4' };
	vector<char>b = { '1','2','3','4','9'};
	cout << bigadd(a, b);

	
}
